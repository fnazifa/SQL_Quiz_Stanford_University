Q.1) Find the names of all students who are friends with someone named Gabriel.
Ans: 
select name
from (select ID1 from Highschooler, Friend
where ID = ID2 and name='Gabriel') G, Highschooler
where G.ID1=ID;

Q.2) For every student who likes someone 2 or more grades younger than themselves, return that student's name and grade, and the name and grade of the student they like. 
Ans: 
select H1.name, H1.grade, H2.name, H2.grade
from Highschooler H1, Highschooler H2, Likes
where H1.ID=Likes.ID1 and H1.grade-H2.grade>=2 and
H2.ID=Likes.ID2 and H1.ID<>H2.ID and H1.grade>H2.grade;

Q.3) For every pair of students who both like each other, return the name and grade of both students. Include each pair only once, with the two names in alphabetical order. 
Ans. 
select h1.name, h1.grade, h2.name, h2.grade  
from Likes l1, Likes l2, Highschooler h1, Highschooler h2
where l1.ID1=l2.ID2 and l2.ID1=l1.ID2 and l1.ID1=h1.ID and l1.ID2=h2.ID and h1.name<h2.name;

Q.4) Find all students who do not appear in the Likes table (as a student who likes or is liked) and return their names and grades. Sort by grade, then by name within each grade. 
Ans:
select name, grade from Highschooler
where not ID in
    (select L1.ID1 as ID from Likes L1 
    union 
    select L2.ID2 as ID from Likes L2)

Q.5) For every situation where student A likes student B, but we have no information about whom B likes (that is, B does not appear as an ID1 in the Likes table), return A and B's names and grades. 
Ans:
select H1.name, H1.grade, H2.name, H2.grade
from Highschooler H1, Highschooler H2, 
    (select L1.ID1 as B, L1.ID2 as A 
    from Likes L1, Likes L2
    where L1.ID1=L2.ID1 and A not in 
                        (select ID1 from Likes L3)) X
where H1.ID=X.B and H2.ID=X.A

Q.6) Find names and grades of students who only have friends in the same grade. Return the result sorted by grade, then by name within each grade. 
Ans:
select name, grade from Highschooler
where ID not in (
  select ID1 from Highschooler H1, Friend, Highschooler H2
  where H1.ID = Friend.ID1 and Friend.ID2 = H2.ID and H1.grade <> H2.grade)
order by grade, name;

Q.7) For each student A who likes a student B where the two are not friends, find if they have a friend C in common (who can introduce them!). For all such trios, return the name and grade of A, B, and C. 
Ans:
select H1.name, H1.grade, H2.name, H2.grade, H3.name, H3.grade
from Likes L1, Friend F1, Highschooler H1, Highschooler H2, Highschooler H3
where L1.ID1=F1.ID1 and H1.ID=L1.ID1 
      and
      L1.ID2 not in
      (select ID2 from Friend F4
      where F1.ID1=F4.ID1) 
      and 
      exists (
             select * from Friend F2
             where H2.ID=L1.ID2 and L1.ID2=F2.ID1 
             and L1.ID1<>F2.ID2 and
              exists (
                      select *
                      from Friend F3
                      where F3.ID1=L1.ID1 and F1.ID2=F2.ID2 and H3.ID=F1.ID2
                     )
          )

Q.8) Find the difference between the number of students in the school and the number of different first names. 
Ans:
select count(ID) - count(distinct name)
from Highschooler

Q.9) Find the name and grade of all students who are liked by more than one other student. 
Ans: 
select name, grade
from Likes join Highschooler
where ID=ID2
group by ID2
having count(ID2)>1